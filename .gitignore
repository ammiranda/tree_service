# Terraform
**/.terraform/*
*.tfstate
*.tfstate.*
crash.log
crash.*.log
*.tfvars
!terraform/terraform.tfvars.example
override.tf
override.tf.json
*_override.tf
*_override.tf.json
.terraformrc
terraform.rc
.terraform.lock.hcl

# Volume directory (LocalStack and other local state)
volume/
volume/**/*

# Go
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out
go.work

# IDE
.idea/
.vscode/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Logs
*.log

# Environment variables
.env
.env.local
.env.*.local

# Build output
bin/
dist/
build/

# Dependencies
vendor/
node_modules/

# Test coverage
coverage/
.coverage
htmlcov/

# Docker
.docker/
docker-compose.override.yml

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
vendor/

# Go workspace file
go.work

# Environment files
.env
.env.*
!.env.example

# IDE specific files
.idea/
.vscode/
*.swp
*.swo
*~

# OS specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
data/
*.db
*.sqlite
*.sqlite3
*.log

# AWS specific
.aws/
aws.json
aws-credentials.json

# Build output
bin/
dist/
build/

# Temporary files
tmp/
temp/

# Debug files
debug
debug.test

# Local development certificates
*.pem
*.key
*.crt

# Coverage directory
coverage/

# Air live reload
tmp/ 